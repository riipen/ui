{"version":3,"file":"static/webpack/static/development/pages/index.js.265c97ff39a5f562336a.hot-update.js","sources":["webpack:///./src/modules/components/Link.jsx","webpack:///./src/modules/components/MarkdownElement.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Link as RiipenLink } from \"@riipen-ui/components\";\n\nclass Link extends React.Component {\n  static propTypes = {\n    /**\n     * The content of the link.\n     */\n    children: PropTypes.any\n  };\n\n  render() {\n    const { children, ...other } = this.props;\n\n    const href = `${process.env.URL_PREFIX}${other.href}`;\n\n    return (\n      <RiipenLink href={href} {...other}>\n        {children}\n      </RiipenLink>\n    );\n  }\n}\n\nexport default Link;\n","import marked from \"marked\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport prism from \"src/utils/prism\";\n\nimport ThemeContext from \"@riipen-ui/styles/ThemeContext\";\n\nconst renderer = new marked.Renderer();\n\nconst markedOptions = {\n  baseUrl: process.env.URL_PREFIX,\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  highlight(code, language) {\n    let prismLanguage;\n\n    switch (language) {\n      case \"sh\":\n        prismLanguage = prism.languages.bash;\n        break;\n\n      case \"js\":\n        prismLanguage = prism.languages.jsx;\n        break;\n\n      default:\n        prismLanguage = prism.languages[language];\n        break;\n    }\n\n    if (!prismLanguage) {\n      if (language) {\n        throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\n      } else {\n        prismLanguage = prism.languages.jsx;\n      }\n    }\n\n    return prism.highlight(code, prismLanguage);\n  },\n  renderer\n};\n\nclass MarkdownElement extends React.Component {\n  static propTypes = {\n    text: PropTypes.string\n  };\n\n  static contextType = ThemeContext;\n\n  render() {\n    const { text } = this.props;\n\n    const theme = this.context;\n\n    return (\n      <React.Fragment>\n        <div\n          dangerouslySetInnerHTML={{ __html: marked(text, markedOptions) }}\n        />\n        <style jsx>{`\n          div {\n            font-family: ${theme.typography.fontFamily};\n            font-size: 16px;\n            color: ${theme.palette.text.primary};\n          }\n          div :global(h1) {\n            font-family: ${theme.typography.h1.fontFamily};\n            font-size: ${theme.typography.h1.fontSize};\n            font-weight: ${theme.typography.h1.fontWeight};\n            letter-spacing: ${theme.typography.h1.letterSpacing};\n            line-height: ${theme.typography.h1.lineHeight};\n            margin: 16px 0;\n          }\n          div :global(h2) {\n            font-family: ${theme.typography.h2.fontFamily};\n            font-size: ${theme.typography.h2.fontSize};\n            font-weight: ${theme.typography.h2.fontWeight};\n            letter-spacing: ${theme.typography.h2.letterSpacing};\n            line-height: ${theme.typography.h2.lineHeight};\n            margin: 40px 0 16px;\n          }\n          div :global(h3) {\n            font-family: ${theme.typography.h3.fontFamily};\n            font-size: ${theme.typography.h3.fontSize};\n            font-weight: ${theme.typography.h3.fontWeight};\n            letter-spacing: ${theme.typography.h3.letterSpacing};\n            line-height: ${theme.typography.h3.lineHeight};\n            margin: 40px 0 16px;\n          }\n          div :global(h4) {\n            font-family: ${theme.typography.h4.fontFamily};\n            font-size: ${theme.typography.h4.fontSize};\n            font-weight: ${theme.typography.h4.fontWeight};\n            letter-spacing: ${theme.typography.h4.letterSpacing};\n            line-height: ${theme.typography.h4.lineHeight};\n            margin: 32px 0 16px;\n          }\n          div :global(h5) {\n            font-family: ${theme.typography.h5.fontFamily};\n            font-size: ${theme.typography.h5.fontSize};\n            font-weight: ${theme.typography.h5.fontWeight};\n            letter-spacing: ${theme.typography.h5.letterSpacing};\n            line-height: ${theme.typography.h5.lineHeight};\n            margin: 32px 0 16px;\n          }\n          div :global(p) {\n            line-height: 1.6;\n            margin-top: 0;\n            margin-bottom: 16px;\n          }\n          div :global(.description) {\n            font-size: 25px;\n            font-weight: ${theme.typography.fontWeight.medium};\n            margin-bottom: 40px;\n          }\n          div :global(a) {\n            color: ${theme.palette.secondary.main};\n            text-decoration: none;\n          }\n          div :global(a:hover) {\n            text-decoration: underline;\n          }\n          div :global(pre) {\n            background-color: #333;\n            border-radius: 2px;\n            color: #fff;\n            display: block;\n            font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n            font-size: 14px;\n            padding: 18px 12px;\n            overflow-x: auto;\n          }\n          div :global(table) {\n            border-collapse: collapse;\n            border-spacing: 0;\n            display: block;\n            margin-bottom: 16px;\n            overflow-x: auto;\n            width: 100%;\n          }\n          div :global(table .prop-name) {\n            font-family: 'Consolas, \"Liberation Mono\", Menlo, monospace';\n            font-size: 13px;\n          }\n          div :global(table .required) {\n            color: #006500;\n          }\n          div :global(table .prop-type) {\n            color: #932981;\n            font-family: 'Consolas, \"Liberation Mono\", Menlo, monospace';\n            font-size: 13px;\n          }\n          div :global(table .prop-default) {\n            border-bottom: 1px dotted ${theme.palette.text.hint};\n            font-family: 'Consolas, \"Liberation Mono\", Menlo, monospace';\n            font-size: 13px;\n          }\n          div :global(td) {\n            border-bottom: 1px solid ${theme.palette.divider};\n            color: ${theme.palette.text.primary};\n            padding: 16px;\n          }\n          div :global(th) {\n            border-bottom: 1px solid ${theme.palette.divider};\n            color: ${theme.palette.text.primary};\n            font-size: 14px;\n            font-weight: ${theme.typography.fontWeight.medium};\n            line-height: 24px;\n            padding: 16px;\n            white-space: pre;\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MarkdownElement;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlBA;AACA;AADA;AAEA;;;AAGA;AAJA;AACA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAlCA;AAoCA;AApCA;AACA;AAsCA;;;;;;;;;;;;;AAOA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAuHA;;;;AApIA;AACA;AADA;AAEA;AADA;AACA;AAFA;AACA;AAsIA;;;;;A","sourceRoot":""}